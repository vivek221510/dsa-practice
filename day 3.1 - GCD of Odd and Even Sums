// QUESTION: leetcode:3658 (GCD of Odd and Even Sums)
// Given an integer n, compute the GCD of:
//   sumOdd  = sum of first n odd numbers
//   sumEven = sum of first n even numbers
//
// ------- APPROACH -------
// - Compute sums of first n odd and even numbers using a loop.
// - Use Euclidean algorithm to get gcd.
// (Optimized: direct formula â†’ result = n)
//
// **** TC: O(n) ****
// **** SC: O(1) ****

class Solution {
    public int gcdOfOddEvenSums(int n) {
        int osum = 0, esum = 0;
        int odd = 1, even = 2;

        for (int i = 0; i < n; i++) {
            osum += odd;
            odd += 2;    // next odd number
            esum += even;
            even += 2;   // next even number
        }

        return gcd(osum, esum);
    }

    // Euclidean algorithm for gcd
    private int gcd(int a, int b) {
        while (b != 0) {
            int temp = b;   // store current divisor
            b = a % b;      // remainder becomes new divisor
            a = temp;
        }
        return a;
    }
}
