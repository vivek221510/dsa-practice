/*
🌟 LeetCode 812: Largest Triangle Area

✅ Problem:
You are given an array of points on the 2D plane. 
Find the area of the largest triangle that can be formed by any 3 of the points.

---

🔹 Example:
Input: points = [[0,0],[0,1],[1,0],[0,2],[2,0]]
Output: 2.0

Explanation:
The triangle formed by (0,2), (2,0), and (0,0) has the largest area = 2.0.

---

🧩 Approach:
- Use the **Shoelace formula (determinant method)** to calculate the area of a triangle given 3 vertices:
  Area = 0.5 * |x1*y2 + x2*y3 + x3*y1 - (y1*x2 + y2*x3 + y3*x1)|
- Iterate through all possible triplets of points.
- Keep track of the maximum area encountered.
- Return the maximum area.

---

⏱️ Complexity:
- Time Complexity: O(n³)  → checking all triplets (n ≤ 50 is manageable).
- Space Complexity: O(1) → only a few extra variables used.

---

💻 Code:
*/

class Solution {
    public double largestTriangleArea(int[][] points) {
        double ans = 0;
        int n = points.length;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                for (int k = j + 1; k < n; k++) {
                    double area = 0.5 * Math.abs(
                        points[i][0] * points[j][1] +
                        points[j][0] * points[k][1] +
                        points[k][0] * points[i][1] -
                        (points[i][1] * points[j][0] +
                         points[j][1] * points[k][0] +
                         points[k][1] * points[i][0])
                    );
                    ans = Math.max(ans, area);
                }
            }
        }
        return ans;
    }
}
