// DAY 10
// QUESTION: LeetCode - Restore Finishing Order
//
// You are given an integer array order of length n and an integer array friends.
// order contains every integer from 1 to n exactly once, representing the IDs of the participants 
// of a race in their finishing order.
// friends contains the IDs of your friends in the race sorted in strictly increasing order. 
// Each ID in friends is guaranteed to appear in the order array.
// Return an array containing your friends' IDs in their finishing order.

class Solution {
    public int[] recoverOrder(int[] order, int[] friends) {
        int n = friends.length;
        int[] ans = new int[n];
        int ind = 0;

        // Traverse the finishing order
        for (int i = 0; i < order.length; i++) {
            // For each participant, check if they are a friend
            for (int j = 0; j < n; j++) {
                if (order[i] == friends[j]) {
                    // If friend found, place them in result
                    ans[ind] = order[i];
                    ind++;
                    break; // stop inner loop once matched
                }
            }
        }
        return ans;
    }
}
