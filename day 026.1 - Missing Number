/*
🚀 LeetCode 268: Missing Number

✅ Problem:
Given an array nums containing n distinct numbers in the range [0, n], 
return the only number in the range that is missing from the array.

🔹 Example 1:
Input: nums = [3,0,1]
Output: 2
Explanation: n = 3 → numbers in range [0,3]. Missing = 2.

🔹 Example 2:
Input: nums = [0,1]
Output: 2
Explanation: n = 2 → numbers in range [0,2]. Missing = 2.

---

💡 Approach (XOR Trick):
- Use XOR properties:
  - a ^ a = 0
  - a ^ 0 = a
- XOR all indices [0..n] with all elements in nums.
- Matching numbers cancel out, leaving only the missing number.

---

⏱️ Complexity:
- Time: O(n) → single pass through nums
- Space: O(1) → constant extra space

---
*/
class Solution {
    public int missingNumber(int[] nums) {
        int n = nums.length;
        int ans = 0;
        for (int i = 0; i < n; i++) {
            ans ^= nums[i];  // XOR with element
            ans ^= i;        // XOR with index
        }
        ans ^= n;            // XOR with last number
        return ans;
    }
}
